/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package zbook;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Zack
 */
public class CartUI extends javax.swing.JFrame {

    /**
     * Creates new form CartUI
     */
    public CartUI(Cart cart) {
        initComponents();
        DefaultListModel model = new DefaultListModel();
        model.clear();
        itemsInCartList.setModel(model);
        
        Connection c = new DBConnector().connect();
        String patronName;
        String startDate;
        String startTime;
        String endDate;
        String endTime;
        
        System.out.println(Integer.toString(cart.getPatronID()));
        
        idField.setText(Integer.toString(cart.getPatronID()));
        startDate = Integer.toString(ZTime.getMonthValue(cart.getStartTime()));
        startDate += "/";
        startDate += Integer.toString(ZTime.getDay(cart.getStartTime()));
        startDate += "/";
        startDate += Integer.toString(ZTime.getYear(cart.getStartTime()));
        
        startDateField.setText(startDate);
        
        endDate = Integer.toString(ZTime.getMonthValue(cart.getEndTime()));
        endDate += "/";
        endDate += Integer.toString(ZTime.getDay(cart.getEndTime()));
        endDate += "/";
        endDate += Integer.toString(ZTime.getYear(cart.getEndTime()));
        
        endDateField.setText(endDate);
        
        int hour = ZTime.getHour(cart.getStartTime());
        startTime = hour<10 ? "0"+Integer.toString(hour) : Integer.toString(hour);
        startTime +=":";
        int min = ZTime.getMinute(cart.getStartTime());
        startTime += min<10 ? "0"+Integer.toString(min) : Integer.toString(min);
        startTimeField.setText(startTime);
        
        hour = ZTime.getHour(cart.getEndTime());
        endTime = hour<10 ? "0"+Integer.toString(hour) : Integer.toString(hour);
        endTime +=":";
        min = ZTime.getMinute(cart.getEndTime());
        endTime += min<10 ? "0"+Integer.toString(min) : Integer.toString(min);
        endTimeField.setText(endTime);
        
        
        try {
            Statement stmt = c.createStatement();
            String query = "select first_name,last_name from Patron where patron_ID == "+cart.getPatronID()+";";
            ResultSet rs = stmt.executeQuery(query);
            rs.next();
            patronField.setText(rs.getString("first_name")+" "+rs.getString("last_name")); 
            
            if(cart.size() == 0)return;
            
            query = "select name, copy_number from Item where barcode == "+cart.get(0);
            for(int i = 1;i<cart.size();i++){
                query += " OR barcode == "+cart.get(i);
            }
            query += ";";
            
            
            rs = stmt.executeQuery(query);
            rs.next();
            String name = "";
            int copyNumber = -1;
            for(int i = 0;i<cart.size();i++){
                name = rs.getString("name");
                copyNumber = rs.getInt("copy_number");
                
                model.addElement(name+" - copy no. "+copyNumber);
                rs.next();
                
            }
            
          c.close();
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "There was an error accessing the database. Try again later");
        }catch(NullPointerException n){
            JOptionPane.showMessageDialog(null, "It happens. NULL");
        }
        
        
        
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        patronLabel = new javax.swing.JLabel();
        patronField = new javax.swing.JTextField();
        idLabel = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        startDateLabel = new javax.swing.JLabel();
        startDateField = new javax.swing.JTextField();
        endDateLabel = new javax.swing.JLabel();
        endDateField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemsInCartList = new javax.swing.JList<>();
        checkoutItemsButton = new javax.swing.JButton();
        clearItemsButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        startTimeField = new javax.swing.JTextField();
        endTimeField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.cyan, java.awt.Color.blue));

        patronLabel.setText("Patron:");

        patronField.setEditable(false);
        patronField.setText("jTextField1");

        idLabel.setText("id:");

        idField.setEditable(false);
        idField.setText("jTextField2");

        startDateLabel.setText("Start Date:");

        startDateField.setEditable(false);
        startDateField.setText("jTextField3");

        endDateLabel.setText("End Date:");

        endDateField.setEditable(false);
        endDateField.setText("jTextField4");

        itemsInCartList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(itemsInCartList);

        checkoutItemsButton.setText("Checkout Items");
        checkoutItemsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutItemsButtonActionPerformed(evt);
            }
        });

        clearItemsButton.setText("Clear All Items");
        clearItemsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearItemsButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Start Time:");

        jLabel2.setText("End Time:");

        startTimeField.setEditable(false);
        startTimeField.setText("jTextField5");

        endTimeField.setEditable(false);
        endTimeField.setText("jTextField6");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(startDateLabel)
                            .addComponent(idLabel)
                            .addComponent(patronLabel)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(patronField)
                            .addComponent(idField)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(startTimeField)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel2))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(startDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(endDateLabel)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(endDateField, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                                    .addComponent(endTimeField)))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(clearItemsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(checkoutItemsButton)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patronLabel)
                    .addComponent(patronField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel)
                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startDateLabel)
                    .addComponent(startDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endDateLabel)
                    .addComponent(endDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(endTimeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(startTimeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkoutItemsButton)
                    .addComponent(clearItemsButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkoutItemsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutItemsButtonActionPerformed
        Connection c = new DBConnector().connect();
        try{
            Statement stmt = c.createStatement();
            String insert;
            
            for(int i = 0;i<MainUI.cart.size();i++){
                insert = "insert into Has values("+MainUI.cart.get(i)
                        + ", "+MainUI.cart.getPatronID()+", "+
                        MainUI.cart.getStartTime()+");";
                stmt.execute(insert);
            }
            c.commit();
            c.close();
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
        
    }//GEN-LAST:event_checkoutItemsButtonActionPerformed

    private void clearItemsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearItemsButtonActionPerformed
        itemsInCartList.setModel(new DefaultListModel());
        MainUI.cart.clearItems();
        MainUI.cartLabel.setText("cart(0)");
        
    }//GEN-LAST:event_clearItemsButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void runCartUI(Cart cart) {
        if(cart == null){
            JOptionPane.showMessageDialog(null, "A cart has not yet been created");
            return;
        }
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CartUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CartUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CartUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CartUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CartUI(cart).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton checkoutItemsButton;
    private javax.swing.JButton clearItemsButton;
    private javax.swing.JTextField endDateField;
    private javax.swing.JLabel endDateLabel;
    private javax.swing.JTextField endTimeField;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel idLabel;
    private javax.swing.JList<String> itemsInCartList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField patronField;
    private javax.swing.JLabel patronLabel;
    private javax.swing.JTextField startDateField;
    private javax.swing.JLabel startDateLabel;
    private javax.swing.JTextField startTimeField;
    // End of variables declaration//GEN-END:variables
}
